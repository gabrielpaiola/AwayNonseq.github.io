var plainParam=function(a){return a.match(/^"([^"]|"")*"$/)?a.slice(1,-1).replace(/""/g,'"').replace(/,/,"`,"):a.match(/^\d*\.?\d*$/)?a:"% "+a};
Blockly.defineBlocksWithJsonArray([{type:"ahk_cmd_block_input",message0:"Block all mouse and keyboard input %1",args0:[{type:"input_value",name:"ONOFF",check:"Boolean"}],previousStatement:null,nextStatement:null,tooltip:"Disables or enables the user's ability to interact with the computer via keyboard and mouse.",helpUrl:"https://www.autohotkey.com/docs/commands/BlockInput.htm"},{type:"ahk_cmd_block_input_send_mouse",message0:"Block user input %1",args0:[{type:"field_dropdown",name:"NAME",options:[["while using Send",
"Send"],["while using Click or MouseMove","Mouse"],["while using Send, Click, or MouseMove","SendAndMouse"],["according to the default rules","Default"]]}],previousStatement:null,nextStatement:null,tooltip:"Disables or enables the user's ability to interact with the computer via keyboard and mouse. This mode only blocks user inputs while specific send and/or mouse commands are in progress.",helpUrl:"https://www.autohotkey.com/docs/commands/BlockInput.htm"},{type:"ahk_cmd_block_input_mouse_move",message0:"Block mouse movement %1",
args0:[{type:"input_value",name:"NAME",check:"Boolean"}],previousStatement:null,nextStatement:null,tooltip:"Disables or enables the user's ability to interact with the computer via keyboard and mouse. This mode only blocks the mouse cursor movement.",helpUrl:"https://www.autohotkey.com/docs/commands/BlockInput.htm"}]);Blockly.AutoHotkey.ahk_cmd_block_input=function(a){return"BlockInput, % "+Blockly.AutoHotkey.valueToCode(a,"ONOFF",Blockly.AutoHotkey.ORDER_COMMA)+"\n"};
Blockly.AutoHotkey.ahk_cmd_block_input_send_mouse=function(a){return"BlockInput, "+a.getFieldValue("NAME")+"\n"};Blockly.AutoHotkey.ahk_cmd_block_input_mouse_move=function(a){return"BlockInput, % ("+Blockly.AutoHotkey.valueToCode(a,"NAME",Blockly.AutoHotkey.ORDER_ATOMIC)+') ? "MouseMove" : "MouseMoveOff"\n'};
Blockly.defineBlocksWithJsonArray([{type:"ahk_cmd_click",message0:"%1 click %2 time(s)",args0:[{type:"field_dropdown",name:"NAME",options:[["Left","Left"],["Right","Right"],["Middle","Middle"]]},{type:"input_value",name:"ClickCount",check:"Number"}],previousStatement:null,nextStatement:null,tooltip:"Clicks a mouse button at the current mouse position.",helpUrl:"https://www.autohotkey.com/docs/commands/Click.htm"},{type:"ahk_cmd_click_coords",message0:"%1 click %2 time(s) at (x: %3 , y: %4 )",args0:[{type:"field_dropdown",
name:"NAME",options:[["Left","Left"],["Right","Right"],["Middle","Middle"]]},{type:"input_value",name:"ClickCount",check:"Number"},{type:"input_value",name:"X"},{type:"input_value",name:"Y"}],previousStatement:null,nextStatement:null,tooltip:"Clicks a mouse button at the specified coordinates. If coordinates are not specified, the cursor's current position is used.",helpUrl:"https://www.autohotkey.com/docs/commands/Click.htm"}]);
Blockly.AutoHotkey.ahk_cmd_click=function(a){var b=a.getFieldValue("NAME"),c=Blockly.AutoHotkey.valueToCode(a,"ClickCount",Blockly.AutoHotkey.ORDER_COMMA),d=Blockly.AutoHotkey.valueToCode(a,"X",Blockly.AutoHotkey.ORDER_COMMA);a=Blockly.AutoHotkey.valueToCode(a,"Y",Blockly.AutoHotkey.ORDER_COMMA);var f="";if(!c.match(/^\-?\d+(\.\d+)?$/)){var e=Blockly.AutoHotkey.variableDB_.getDistinctName("click_count",Blockly.Variables.NAME_TYPE);f+=e+" := "+c+"\n";c="%"+e+"%"}d&&!d.match(/^\-?\d+(\.\d+)?$/)&&(e=
Blockly.AutoHotkey.variableDB_.getDistinctName("click_x",Blockly.Variables.NAME_TYPE),f+=e+" := "+d+"\n",d="%"+e+"%");a&&!a.match(/^\-?\d+(\.\d+)?$/)&&(e=Blockly.AutoHotkey.variableDB_.getDistinctName("click_y",Blockly.Variables.NAME_TYPE),f+=e+" := "+a+"\n",a="%"+e+"%");f+="Click, "+b;if(d||a)f+=", "+(d||"0")+", "+(a||"0");return f+", "+c+"\n"};Blockly.AutoHotkey.ahk_cmd_click_coords=Blockly.AutoHotkey.ahk_cmd_click;
Blockly.defineBlocksWithJsonArray([{type:"ahk_cmd_clip_wait",message0:"wait up to %1 second(s) for Clipboard to have %2",args0:[{type:"input_value",name:"SECONDS",check:"Number"},{type:"field_dropdown",name:"DATA_TYPE",options:[["text or files",""],["any data","1"]]}],previousStatement:null,nextStatement:null,tooltip:"Waits until the clipboard contains data.",helpUrl:"https://www.autohotkey.com/docs/commands/ClipWait.htm"}]);
Blockly.AutoHotkey.ahk_cmd_clip_wait=function(a){var b=Blockly.AutoHotkey.valueToCode(a,"SECONDS",Blockly.AutoHotkey.ORDER_COMMA)||"";a=a.getFieldValue("DATA_TYPE");var c="ClipWait";if(b||a)c+=",";b&&(c+=" "+b);a&&(c+=", "+a);return c+"\n"};
Blockly.defineBlocksWithJsonArray([{type:"ahk_cmd_coord_mode",message0:"Treat %1 coordinates as relative to the %2",args0:[{type:"field_dropdown",name:"TARGET_TYPE",options:[["tool tip","ToolTip"],["pixel","Pixel"],["mouse","Mouse"],["caret","Caret"],["menu","Menu"]]},{type:"field_dropdown",name:"RELATIVE_TO",options:[["screen","Screen"],["active window","Window"],["active client area (active window but ignoring borders)","Client"]]}],previousStatement:null,nextStatement:null,tooltip:"Sets coordinate mode for various commands to be relative to either the active window or the screen.",
helpUrl:"https://www.autohotkey.com/docs/commands/CoordMode.htm"}]);Blockly.AutoHotkey.ahk_cmd_coord_mode=function(a){var b=a.getFieldValue("TARGET_TYPE");a=a.getFieldValue("RELATIVE_TO");return"CoordMode, "+b+", "+a+"\n"};
Blockly.defineBlocksWithJsonArray([{type:"ahk_cmd_file_append",message0:"append %1 to file %2 with encoding %3",args0:[{type:"input_value",name:"TEXT",check:"String"},{type:"input_value",name:"FILE_PATH",check:"String"},{type:"field_dropdown",name:"ENCODING",options:[["default",""],["UTF-8 with BOM","UTF-8"],["UTF-8 without BOM","UTF-8-RAW"],["UTF-16 with BOM","UTF-16"],["UTF-16 without BOM","UTF-16-RAW"],["ANSI","CP0"]]}],previousStatement:null,nextStatement:null,tooltip:"Writes text to the end of a file (first creating the file, if necessary).",
helpUrl:"https://www.autohotkey.com/docs/commands/FileAppend.htm"}]);Blockly.AutoHotkey.ahk_cmd_file_append=function(a){var b=Blockly.AutoHotkey.valueToCode(a,"TEXT",Blockly.AutoHotkey.ORDER_COMMA)||'""',c=Blockly.AutoHotkey.valueToCode(a,"FILE_PATH",Blockly.AutoHotkey.ORDER_COMMA)||'""';a=a.getFieldValue("ENCODING");b="FileAppend, "+plainParam(b)+", "+plainParam(c);a&&(b+=", "+a);return b+"\n"};
Blockly.defineBlocksWithJsonArray([{type:"ahk_cmd_file_copy",message0:"copy file from %1 to %2 and %3 on conflict",args0:[{type:"input_value",name:"SOURCE",check:"String"},{type:"input_value",name:"DEST",check:"String"},{type:"field_dropdown",name:"OVERWRITE",options:[["don't overwrite",""],["overwrite","True"]]}],previousStatement:null,nextStatement:null,tooltip:"Copies one or more files.",helpUrl:"https://www.autohotkey.com/docs/commands/FileCopy.htm"}]);
Blockly.AutoHotkey.ahk_cmd_file_copy=function(a){var b=Blockly.AutoHotkey.valueToCode(a,"SOURCE",Blockly.AutoHotkey.ORDER_COMMA)||'""',c=Blockly.AutoHotkey.valueToCode(a,"DEST",Blockly.AutoHotkey.ORDER_COMMA)||'""';a=a.getFieldValue("OVERWRITE");b="FileCopy, "+plainParam(b)+", "+plainParam(c);a&&(b+=", "+a);return b+"\n"};
Blockly.defineBlocksWithJsonArray([{type:"ahk_cmd_file_copy_dir",message0:"copy folder from %1 to %2 and %3 on conflict",args0:[{type:"input_value",name:"SOURCE",check:"String"},{type:"input_value",name:"DEST",check:"String"},{type:"field_dropdown",name:"OVERWRITE",options:[["don't overwrite",""],["overwrite","True"]]}],previousStatement:null,nextStatement:null,tooltip:"Copies a folder along with all its sub-folders and files.",helpUrl:"https://www.autohotkey.com/docs/commands/FileCopyDir.htm"}]);
Blockly.AutoHotkey.ahk_cmd_file_copy_dir=function(a){var b=Blockly.AutoHotkey.valueToCode(a,"SOURCE",Blockly.AutoHotkey.ORDER_COMMA)||'""',c=Blockly.AutoHotkey.valueToCode(a,"DEST",Blockly.AutoHotkey.ORDER_COMMA)||'""';a=a.getFieldValue("OVERWRITE");b="FileCopyDir, "+plainParam(b)+", "+plainParam(c);a&&(b+=", "+a);return b+"\n"};
Blockly.defineBlocksWithJsonArray([{type:"ahk_cmd_file_delete",message0:"delete file %1 %2",args0:[{type:"input_value",name:"PATH",check:"String"},{type:"field_dropdown",name:"MODE",options:[["to recycle bin","RECYCLE"],["permanently","PERMANENT"]]}],previousStatement:null,nextStatement:null,tooltip:"Deletes one or more files.",helpUrl:"https://www.autohotkey.com/docs/commands/FileDelete.htm"}]);
Blockly.AutoHotkey.ahk_cmd_file_delete=function(a){var b=Blockly.AutoHotkey.valueToCode(a,"PATH",Blockly.AutoHotkey.ORDER_COMMA),c="";c="RECYCLE"===a.getFieldValue("MODE")?c+"FileRecycle":c+"FileDelete";return c+", "+plainParam(b)+"\n"};
Blockly.defineBlocksWithJsonArray([{type:"ahk_cmd_file_exist",message0:"path %1 exists as a %2",args0:[{type:"input_value",name:"PATH",check:"String"},{type:"field_dropdown",name:"IS",options:[["file or folder",""],["file","A"],["folder","D"]]}],output:"Boolean",outputShape:Blockly.OUTPUT_SHAPE_HEXAGONAL,tooltip:"Checks for the existence of a file or folder",helpUrl:"https://www.autohotkey.com/docs/commands/FileExist.htm"}]);
Blockly.AutoHotkey.ahk_cmd_file_exist=function(a){var b=Blockly.AutoHotkey.valueToCode(a,"PATH",Blockly.AutoHotkey.ORDER_NONE);a=a.getFieldValue("IS");b="FileExist("+b+")";a&&(b="InStr("+b+', "'+a+'")');return[b,Blockly.AutoHotkey.ORDER_FUNCTION_CALL]};
Blockly.defineBlocksWithJsonArray([{type:"ahk_cmd_file_move",message0:"move file from %1 to %2 and %3 on conflict",args0:[{type:"input_value",name:"SOURCE",check:"String"},{type:"input_value",name:"DEST",check:"String"},{type:"field_dropdown",name:"OVERWRITE",options:[["don't overwrite",""],["overwrite","True"]]}],previousStatement:null,nextStatement:null,tooltip:"Moves or renames one or more files.",helpUrl:"https://www.autohotkey.com/docs/commands/FileMove.htm"}]);
Blockly.AutoHotkey.ahk_cmd_file_move=function(a){var b=Blockly.AutoHotkey.valueToCode(a,"SOURCE",Blockly.AutoHotkey.ORDER_COMMA)||'""',c=Blockly.AutoHotkey.valueToCode(a,"DEST",Blockly.AutoHotkey.ORDER_COMMA)||'""';a=a.getFieldValue("OVERWRITE");b="FileMove, "+plainParam(b)+", "+plainParam(c);a&&(b+=", "+a);return b+"\n"};
Blockly.defineBlocksWithJsonArray([{type:"ahk_cmd_file_move_dir",message0:"move folder from %1 to %2 and %3 on conflict",args0:[{type:"input_value",name:"SOURCE",check:"String"},{type:"input_value",name:"DEST",check:"String"},{type:"field_dropdown",name:"OVERWRITE",options:[["don't overwrite",""],["overwrite (READ THE DOCS BEFORE USING)","2"],["don't move any files*","R"]]}],previousStatement:null,nextStatement:null,tooltip:'Moves or renames one or more files.\n\nThe "don\'t move any files on conflict" option cannot move files between drives.',
helpUrl:"https://www.autohotkey.com/docs/commands/FileMove.htm"}]);Blockly.AutoHotkey.ahk_cmd_file_move_dir=function(a){var b=Blockly.AutoHotkey.valueToCode(a,"SOURCE",Blockly.AutoHotkey.ORDER_COMMA)||'""',c=Blockly.AutoHotkey.valueToCode(a,"DEST",Blockly.AutoHotkey.ORDER_COMMA)||'""';a=a.getFieldValue("OVERWRITE");b="FileMoveDir, "+plainParam(b)+", "+plainParam(c);a&&(b+=", "+a);return b+"\n"};
Blockly.defineBlocksWithJsonArray([{type:"ahk_cmd_file_read",message0:"set %1 to contents of file %2",args0:[{type:"field_variable",name:"VAR",variable:"OutputVar"},{type:"input_value",name:"PATH",check:"String"}],previousStatement:null,nextStatement:null,tooltip:"Reads a file's contents into a variable.",helpUrl:"https://www.autohotkey.com/docs/commands/FileRead.htm"}]);
Blockly.AutoHotkey.ahk_cmd_file_read=function(a){var b=Blockly.AutoHotkey.variableDB_.getName(a.getField("VAR").getText(),Blockly.Variables.NAME_TYPE);a=Blockly.AutoHotkey.valueToCode(a,"PATH",Blockly.AutoHotkey.ORDER_COMMA);return"FileRead, "+b+", "+plainParam(a)+"\n"};
Blockly.defineBlocksWithJsonArray([{type:"fs_file_read_line",message0:"set %1 to contents of line %2 of file %3",args0:[{type:"field_variable",name:"VAR",variable:"OutputVar"},{type:"input_value",name:"LINE",check:"Number"},{type:"input_value",name:"PATH",check:"String"}],previousStatement:null,nextStatement:null,tooltip:"Reads a file's contents into a variable.",helpUrl:"https://www.autohotkey.com/docs/commands/FileRead.htm"}]);
Blockly.AutoHotkey.ahk_cmd_file_read_line=function(a){var b=Blockly.AutoHotkey.variableDB_.getName(a.getField("VAR").getText(),Blockly.Variables.NAME_TYPE),c=Blockly.AutoHotkey.valueToCode(a,"PATH",Blockly.AutoHotkey.ORDER_COMMA);a=Blockly.AutoHotkey.valueToCode(a,"LINE",Blockly.AutoHotkey.ORDER_COMMA);return"FileReadLine, "+b+", "+plainParam(c)+", "+a+"\n"};
Blockly.defineBlocksWithJsonArray([{type:"ahk_cmd_msg_box",message0:"show message box with text %1",args0:[{type:"input_value",name:"TEXT"}],previousStatement:null,nextStatement:null,tooltip:"Displays the specified text in a small window.",helpUrl:"https://www.autohotkey.com/docs/commands/MsgBox.htm"}]);Blockly.AutoHotkey.ahk_cmd_msg_box=function(a){a=Blockly.AutoHotkey.valueToCode(a,"TEXT",Blockly.AutoHotkey.ORDER_COMMA);return"MsgBox, "+plainParam(a)+"\n"};
Blockly.defineBlocksWithJsonArray([{type:"ahk_cmd_run",message0:"run %1 and %2",args0:[{type:"input_value",name:"TARGET",check:"String"},{type:"field_dropdown",name:"NAME",options:[["continue immediately",""],["wait for process to end","Wait"]]}],previousStatement:null,nextStatement:null,tooltip:"Runs an external program",helpUrl:"https://www.autohotkey.com/docs/commands/Run.htm"}]);
Blockly.AutoHotkey.ahk_cmd_run=function(a){var b=Blockly.AutoHotkey.valueToCode(a,"TARGET",Blockly.AutoHotkey.ORDER_COMMA);return"Run"+a.getFieldValue("NAME")+", "+plainParam(b)+"\n"};Blockly.defineBlocksWithJsonArray([{type:"ahk_cmd_send_raw",message0:"send keystrokes %1",args0:[{type:"input_value",name:"TEXT"}],previousStatement:null,nextStatement:null,tooltip:"TODO",helpUrl:"TODO"}]);
Blockly.AutoHotkey.ahk_cmd_send_raw=function(a){a=Blockly.AutoHotkey.valueToCode(a,"TEXT",Blockly.AutoHotkey.ORDER_COMMA)||'""';return"SendRaw, "+plainParam(a)+"\n"};
Blockly.defineBlocksWithJsonArray([{type:"ahk_cmd_sleep",message0:"wait for %1 %2",args0:[{type:"input_value",name:"DURATION",check:"Number"},{type:"field_dropdown",name:"MULTIPLIER",options:[["seconds"," * 1000"],["milliseconds",""],["minutes"," * 1000 * 60"],["hours"," * 1000 * 60 * 60"]]}],previousStatement:null,nextStatement:null,tooltip:"Waits the specified amount of time before continuing.",helpUrl:"https://www.autohotkey.com/docs/commands/Sleep.htm"}]);
Blockly.AutoHotkey.ahk_cmd_sleep=function(a){var b=Blockly.AutoHotkey.valueToCode(a,"DURATION",Blockly.AutoHotkey.ORDER_MULTIPLICATION);a=a.getFieldValue("MULTIPLIER");return"Sleep, "+b+a+"\n"};
Blockly.defineBlocksWithJsonArray([{type:"ahk_cmd_sys_get",message0:"set %1 to %2",args0:[{type:"field_variable",name:"VAR",variable:"OutputVar"},{type:"field_dropdown",name:"SUB_COMMAND",options:[["monitor count","MonitorCount"],["index of primary monitor","MonitorPrimary"],["mouse button count","43"],["mouse buttons swapped?","23"],["width of a window border","5"],["height of a window border","6"]]}],previousStatement:null,nextStatement:null,tooltip:"",helpUrl:""},{type:"ahk_cmd_sys_get_monitor",
message0:"set %1 to %2 of monitor #%3",args0:[{type:"field_variable",name:"VAR",variable:"OutputVar"},{type:"field_dropdown",name:"SUB_COMMAND",options:[["list of bounding coordinates","Monitor"],["list of bounding coordinates of work area","MonitorWorkArea"],["name","MonitorWorkArea"]]},{type:"input_value",name:"INDEX",check:"Number"}],previousStatement:null,nextStatement:null,tooltip:"",helpUrl:""}]);
Blockly.AutoHotkey.ahk_cmd_sys_get=function(a){var b=Blockly.AutoHotkey.variableDB_.getName(a.getField("VAR").getText(),Blockly.Variables.NAME_TYPE),c=a.getFieldValue("SUB_COMMAND");a=Blockly.AutoHotkey.valueToCode(a,"INDEX",Blockly.AutoHotkey.ORDER_COMMA);return"Monitor"===c||"MonitorWorkArea"===c?(c=Blockly.AutoHotkey.provideFunction_("SysGet"+c,[Blockly.AutoHotkey.FUNCTION_NAME_PLACEHOLDER_+"(index)","{","\tSysGet, out, "+c+", % index","\treturn [outLeft, outTop, outRight, outBottom]","}"]),b+
" := "+c+"("+a+")\n"):"SysGet, "+b+", "+c+(a?", "+a:"")+"\n"};Blockly.AutoHotkey.ahk_cmd_sys_get_monitor=Blockly.AutoHotkey.ahk_cmd_sys_get;Blockly.defineBlocksWithJsonArray([{type:"ahk_cmd_url_download_to_file",message0:"download URL %1 and save to file %2",args0:[{type:"input_value",name:"URL",check:"String"},{type:"input_value",name:"FILEPATH",check:"String"}],previousStatement:null,nextStatement:null,inputsInline:!1,tooltip:"Downloads a file from the Internet.",helpUrl:"https://www.autohotkey.com/docs/commands/URLDownloadToFile.htm"}]);
Blockly.AutoHotkey.ahk_cmd_url_download_to_file=function(a){var b=Blockly.AutoHotkey.valueToCode(a,"URL",Blockly.AutoHotkey.ORDER_COMMA);a=Blockly.AutoHotkey.valueToCode(a,"FILEPATH",Blockly.AutoHotkey.ORDER_COMMA);return"URLDownloadToFile, "+plainParam(b)+", "+plainParam(a)+"\n"};Blockly.defineBlocksWithJsonArray([{type:"ahk_code",message0:"%1",args0:[{type:"field_input",name:"CODE",text:"; Any AutoHotkey Code"}],previousStatement:null,nextStatement:null,tooltip:"Any AutoHotkey code",helpUrl:"https://www.autohotkey.com/docs/"}]);
Blockly.AutoHotkey.ahk_code=function(a){return a.getFieldValue("CODE")+"\n"};Blockly.defineBlocksWithJsonArray([{type:"ahk_evt_auto_execute",message0:"When Started",nextStatement:null,tooltip:"",helpUrl:"",style:{hat:"cap"}}]);Blockly.AutoHotkey.ahk_evt_auto_execute=function(a){return"#NoEnv\nSetBatchLines, -1\n\n"};
Blockly.defineBlocksWithJsonArray([{type:"ahk_evt_hotkey",message0:"On keypress %1 %2",args0:[{type:"input_value",name:"KEY_NAME",check:"key"},{type:"input_statement",name:"STACK"}],colour:"#ffbf00",tooltip:"",helpUrl:"",style:{hat:"cap"}}]);
Blockly.AutoHotkey.ahk_evt_hotkey=function(a){var b=Blockly.AutoHotkey.blockToCode(a.getInputTargetBlock("STACK")),c=Blockly.AutoHotkey.valueToCode(a,"KEY_NAME",Blockly.AutoHotkey.ORDER_NONE);a=Blockly.AutoHotkey.scrub_(a,c+"::\n"+b+"return");Blockly.AutoHotkey.definitions_["::"+c]=a;return null};
Blockly.defineBlocksWithJsonArray([{type:"ahk_evt_on_clipboard_change",message0:"When the Clipboard contents change %1 %2",args0:[{type:"input_dummy"},{type:"input_statement",name:"STACK"}],colour:"#ffbf00",tooltip:"This event occurs whenever any application (even the script itself) has changed the contents of the clipboard. The event also occurs once when the script first starts.",helpUrl:"https://www.autohotkey.com/docs/commands/OnClipboardChange.htm",style:{hat:"cap"}}]);
Blockly.AutoHotkey.ahk_evt_on_clipboard_change=function(a){var b=Blockly.AutoHotkey.blockToCode(a.getInputTargetBlock("STACK"));a=Blockly.AutoHotkey.scrub_(a,"OnClipboardChange:\n"+b+"return");Blockly.AutoHotkey.definitions_[":OnClipboardChange"]=a;return null};
Blockly.defineBlocksWithJsonArray([{type:"ahk_fn_get_key_state",message0:"%2 is %1",args0:[{type:"field_dropdown",name:"MODE",options:[["being held down physically","P"],["being held down logically (according to Windows)",""],["toggled on","T"]]},{type:"input_value",name:"KEY_NAME"}],output:"Boolean",outputShape:Blockly.OUTPUT_SHAPE_HEXAGONAL,tooltip:"Checks if a keyboard key or mouse/joystick button is down or up. Also retrieves joystick status.",helpUrl:"https://www.autohotkey.com/docs/commands/GetKeyState.htm"}]);
Blockly.AutoHotkey.ahk_fn_get_key_state=function(a){var b=a.getFieldValue("MODE");a='GetKeyState("'+Blockly.AutoHotkey.valueToCode(a,"KEY_NAME",Blockly.AutoHotkey.ORDER_NONE)+'"';b&&(a+=', "'+b+'"');return[a+")",Blockly.AutoHotkey.ORDER_FUNCTION_CALL]};Blockly.defineBlocksWithJsonArray([{type:"ahk_fn_print",message0:"print",previousStatement:null,nextStatement:null,mutator:"ahk_fn_print_mutator",tooltip:"Outputs the given values to a console.",helpUrl:"https://www.autohotkey.com/docs/commands/FileOpen.htm#ExStreams"}]);
Blockly.AutoHotkey.ahk_fn_print=function(a){for(var b=Blockly.AutoHotkey.provideFunction_("Print",[Blockly.AutoHotkey.FUNCTION_NAME_PLACEHOLDER_+"(params*)","{","\t#Persistent",'\tstatic _ := DllCall("AllocConsole")','\t, stdout := FileOpen("CONOUT$", "w")',"\tfor i, v in params",'\t\tstdout.Write((i > 1 ? "`t" : "") . (IsObject(v) ? "<object>" : v))',"\tstdout.Read(0) ; Flush write buffer","}"]),c=Array(a.itemCount_),d=0;d<a.itemCount_;d++)c[d]=Blockly.AutoHotkey.valueToCode(a,"ADD"+d,Blockly.AutoHotkey.ORDER_COMMA)||
'""';return b+"("+c.join(", ")+")\n"};
var AHK_FN_PRINT_MUTATOR_MIXIN=$.extend({},Blockly.Constants.Text.TEXT_JOIN_MUTATOR_MIXIN,{updateShape_:function(){for(var a=this,b=0;b<a.itemCount_;)a.getInput("ADD"+b)||a.appendValueInput("ADD"+b).setAlign(Blockly.ALIGN_LEFT),b++;for(;this.getInput("ADD"+b);)this.removeInput("ADD"+b),b++;this.getInput("BUTTONS")&&this.removeInput("BUTTONS");b=this.appendDummyInput("BUTTONS");1<this.itemCount_&&b.appendField(new Blockly.FieldImage(this.REMOVE_IMAGE_DATAURI,24,24,"*",function(){a.removeItem_()},!1));
b.appendField(new Blockly.FieldImage(this.ADD_IMAGE_DATAURI,24,24,"*",function(){a.addItem_()},!1));this.setInputsInline(4>=this.itemCount_)}});Blockly.Extensions.registerMutator("ahk_fn_print_mutator",AHK_FN_PRINT_MUTATOR_MIXIN,Blockly.Constants.Text.TEXT_JOIN_EXTENSION);
Blockly.defineBlocksWithJsonArray([{type:"ahk_fn_regex_match",message0:"position of RegEx %1 in %2 and save match to %3",args0:[{type:"input_value",name:"PATTERN",check:"String"},{type:"input_value",name:"HAYSTACK"},{type:"field_variable",name:"MATCHVAR",variable:"match"}],inputsInline:!0,output:["Number","Boolean"],tooltip:"Determines whether a string contains a pattern (regular expression).",helpUrl:"https://www.autohotkey.com/docs/commands/RegExMatch.htm"}]);
Blockly.AutoHotkey.ahk_fn_regex_match=function(a){var b=Blockly.AutoHotkey.valueToCode(a,"PATTERN",Blockly.AutoHotkey.ORDER_COMMA)||'""',c=Blockly.AutoHotkey.valueToCode(a,"HAYSTACK",Blockly.AutoHotkey.ORDER_COMMA)||'""';a=Blockly.AutoHotkey.variableDB_.getName(a.getFieldValue("MATCHVAR"),Blockly.Variables.NAME_TYPE);return["RegExMatch("+c+", "+b+", "+a+")",Blockly.AutoHotkey.ORDER_FUNCTION_CALL]};
Blockly.defineBlocksWithJsonArray([{type:"ahk_fn_regex_replace",message0:"replace RegEx %1 with %2 in %3",args0:[{type:"input_value",name:"PATTERN"},{type:"input_value",name:"REPLACEMENT"},{type:"input_value",name:"HAYSTACK"}],inputsInline:!0,output:null,outputShape:Blockly.OUTPUT_SHAPE_SQUARE,tooltip:"Determines whether a string contains a pattern (regular expression).",helpUrl:"https://www.autohotkey.com/docs/commands/RegExMatch.htm"}]);
Blockly.AutoHotkey.ahk_fn_regex_replace=function(a){var b=Blockly.AutoHotkey.valueToCode(a,"PATTERN",Blockly.AutoHotkey.ORDER_COMMA)||'""',c=Blockly.AutoHotkey.valueToCode(a,"HAYSTACK",Blockly.AutoHotkey.ORDER_COMMA)||'""';a=Blockly.AutoHotkey.valueToCode(a,"REPLACEMENT",Blockly.AutoHotkey.ORDER_COMMA)||'""';return["RegExReplace("+c+", "+b+", "+a+")",Blockly.AutoHotkey.ORDER_FUNCTION_CALL]};
Blockly.defineBlocksWithJsonArray([{type:"ahk_fn_url_download",message0:"text at URL %1",args0:[{type:"input_value",name:"URL",check:"String"}],output:null,inputsInline:!1,tooltip:"Downloads a file from the Internet.",helpUrl:"https://www.autohotkey.com/docs/commands/URLDownloadToFile.htm"}]);
Blockly.AutoHotkey.ahk_fn_url_download=function(a){a=Blockly.AutoHotkey.valueToCode(a,"URL",Blockly.AutoHotkey.ORDER_COMMA);return[Blockly.AutoHotkey.provideFunction_("UrlDownload",[Blockly.AutoHotkey.FUNCTION_NAME_PLACEHOLDER_+"(url)","{",'\twhr := ComObjCreate("WinHttp.WinHttpRequest.5.1")','\twhr.Open("GET", url, true)',"\twhr.Send(), whr.WaitForResponse()","\treturn whr.ResponseText","}"])+"("+a+")",Blockly.AutoHotkey.ORDER_FUNCTION_CALL]};
Blockly.defineBlocksWithJsonArray([{type:"ahk_key_modifier",message0:"%1 and %2",args0:[{type:"field_dropdown",name:"MODIFIER",options:[["Shift","SHIFT"],["Control","CONTROL"],["Alt","ALT"]]},{type:"input_value",name:"KEY_NAME",check:"key"}],inputsInline:!0,output:"key",tooltip:"TODO: Fill in",helpUrl:"TODO: Fill in"}]);
Blockly.AutoHotkey.ahk_key_modifier=function(a){var b=Blockly.AutoHotkey.valueToCode(a,"KEY_NAME",Blockly.AutoHotkey.ORDER_NONE);return[{CONTROL:"^",ALT:"!",SHIFT:"+"}[a.getFieldValue("MODIFIER")]+b,Blockly.AutoHotkey.ORDER_NONE]};Blockly.defineBlocksWithJsonArray([{type:"ahk_key_name",message0:"Key %1",args0:[{type:"field_input",name:"KEY_NAME",text:"Enter"}],output:"key",tooltip:"The name of the key",helpUrl:"https://www.autohotkey.com/docs/KeyList.htm"}]);
Blockly.AutoHotkey.ahk_key_name=function(a){return[a.getFieldValue("KEY_NAME"),Blockly.AutoHotkey.ORDER_NONE]};Blockly.defineBlocksWithJsonArray([{type:"ahk_key_remap",message0:"Remap %1 to %2",args0:[{type:"input_value",name:"FROM",check:"key"},{type:"input_value",name:"TO",check:"key"}],inputsInline:!0,tooltip:"",helpUrl:"",style:{hat:"cap"}}]);
Blockly.AutoHotkey.ahk_key_remap=function(a){var b=Blockly.AutoHotkey.valueToCode(a,"FROM",Blockly.AutoHotkey.ORDER_NONE);a=Blockly.AutoHotkey.valueToCode(a,"TO",Blockly.AutoHotkey.ORDER_NONE);Blockly.AutoHotkey.definitions_["::"+b]=b+"::"+a;return null};
Blockly.defineBlocksWithJsonArray([{type:"ahk_var_built_in",message0:"A_%1",args0:[{type:"field_dropdown",name:"VARNAME",options:[["AhkPath","A_AhkPath"],["AhkVersion","A_AhkVersion"],["Args","A_Args"],["AutoTrim","A_AutoTrim"],["BatchLines","A_BatchLines"],["ControlDelay","A_ControlDelay"],["CoordModeCaret","A_CoordModeCaret"],["CoordModeMenu","A_CoordModeMenu"],["CoordModeMouse","A_CoordModeMouse"],["CoordModePixel","A_CoordModePixel"],["CoordModeToolTip","A_CoordModeToolTip"],["DD","A_DD"],["DDD",
"A_DDD"],["DDDD","A_DDDD"],["DefaultGui","A_DefaultGui"],["DefaultListView","A_DefaultListView"],["DefaultMouseSpeed","A_DefaultMouseSpeed"],["DefaultTreeView","A_DefaultTreeView"],["DetectHiddenText","A_DetectHiddenText"],["DetectHiddenWindows","A_DetectHiddenWindows"],["ExitReason","A_ExitReason"],["FileEncoding","A_FileEncoding"],["FormatFloat","A_FormatFloat"],["FormatInteger","A_FormatInteger"],["Gui","A_Gui"],["GuiControl","A_GuiControl"],["GuiControlEvent","A_GuiControlEvent"],["GuiEvent",
"A_GuiEvent"],["GuiHeight","A_GuiHeight"],["GuiWidth","A_GuiWidth"],["GuiX","A_GuiX"],["GuiY","A_GuiY"],["Hour","A_Hour"],["IconFile","A_IconFile"],["IconHidden","A_IconHidden"],["IconNumber","A_IconNumber"],["IconTip","A_IconTip"],["IsCompiled","A_IsCompiled"],["IsCritical","A_IsCritical"],["IsPaused","A_IsPaused"],["IsSuspended","A_IsSuspended"],["IsUnicode","A_IsUnicode"],["KeyDelay","A_KeyDelay"],["KeyDelayPlay","A_KeyDelayPlay"],["KeyDuration","A_KeyDuration"],["KeyDurationPlay","A_KeyDurationPlay"],
["LineFile","A_LineFile"],["LineNumber","A_LineNumber"],["ListLines","A_ListLines"],["MDay","A_MDay"],["Min","A_Min"],["MM","A_MM"],["MMM","A_MMM"],["MMMM","A_MMMM"],["Mon","A_Mon"],["MouseDelay","A_MouseDelay"],["MouseDelayPlay","A_MouseDelayPlay"],["MSec","A_MSec"],["Now","A_Now"],["NowUTC","A_NowUTC"],["NumBatchLines","A_NumBatchLines"],["RegView","A_RegView"],["ScriptDir","A_ScriptDir"],["ScriptFullPath","A_ScriptFullPath"],["ScriptHwnd","A_ScriptHwnd"],["ScriptName","A_ScriptName"],["Sec","A_Sec"],
["SendLevel","A_SendLevel"],["SendMode","A_SendMode"],["Space","A_Space"],["StoreCapsLockMode","A_StoreCapsLockMode"],["StringCaseSense","A_StringCaseSense"],["Tab","A_Tab"],["ThisFunc","A_ThisFunc"],["ThisHotkey","A_ThisHotkey"],["ThisLabel","A_ThisLabel"],["TickCount","A_TickCount"],["TimeIdle","A_TimeIdle"],["TimeIdleKeyboard","A_TimeIdleKeyboard"],["TimeIdleMouse","A_TimeIdleMouse"],["TimeIdlePhysical","A_TimeIdlePhysical"],["TitleMatchMode","A_TitleMatchMode"],["TitleMatchModeSpeed","A_TitleMatchModeSpeed"],
["WDay","A_WDay"],["WinDelay","A_WinDelay"],["WorkingDir","A_WorkingDir"],["YDay","A_YDay"],["Year","A_Year"],["YWeek","A_YWeek"],["YYYY","A_YYYY"]]}],output:null,tooltip:"The variables below are built into the program and can be referenced by any script.",helpUrl:"https://www.autohotkey.com/docs/Variables.htm#BuiltIn"}]);Blockly.AutoHotkey.ahk_var_built_in=function(a){return[a.getFieldValue("VARNAME"),Blockly.AutoHotkey.ORDER_ATOMIC]};
Blockly.defineBlocksWithJsonArray([{type:"ahk_var_clipboard",message0:"clipboard text",output:null,tooltip:"Clipboard is a built-in variable that reflects the current contents of the Windows clipboard if those contents can be expressed as text.",helpUrl:"https://www.autohotkey.com/docs/misc/Clipboard.htm"}]);Blockly.AutoHotkey.ahk_var_clipboard=function(a){return["Clipboard",Blockly.AutoHotkey.ORDER_ATOMIC]};
Blockly.defineBlocksWithJsonArray([{type:"ahk_var_clipboard_all_save",message0:"back up clipboard binary to variable %1",args0:[{type:"field_variable",name:"CLIPSAVED",variable:"ClipSaved"}],previousStatement:null,nextStatement:null,tooltip:"Saves a copy of the clipboard's binary contents to a buffer variable, including all data such as pictures and formatting. It is most commonly used to save the clipboard's contents so that the script can temporarily use the clipboard for an operation. You cannot view the contents of this backup directly.",
helpUrl:"https://www.autohotkey.com/docs/misc/Clipboard.htm#ClipboardAll"},{type:"ahk_var_clipboard_all_load",message0:"restore clipboard binary from variable %1",args0:[{type:"field_variable",name:"CLIPSAVED",variable:"ClipSaved"}],previousStatement:null,nextStatement:null,tooltip:"Restores the clipboard from a previously created binary backup.",helpUrl:"https://www.autohotkey.com/docs/misc/Clipboard.htm#ClipboardAll"}]);
Blockly.AutoHotkey.ahk_var_clipboard_all_save=function(a){return Blockly.AutoHotkey.variableDB_.getName(a.getFieldValue("CLIPSAVED"),Blockly.Variables.NAME_TYPE)+" := ClipboardAll\n"};Blockly.AutoHotkey.ahk_var_clipboard_all_load=function(a){return"Clipboard := "+Blockly.AutoHotkey.variableDB_.getName(a.getFieldValue("CLIPSAVED"),Blockly.Variables.NAME_TYPE)+"\n"};
